@subtask samples
manual sample-1.in
manual sample-2.in

@testset smallest-case
manual smallest-case.in

@testset must-jump-X_equals-one
gen must-jump 100000 100000 100000 100000 1 1

@testset must-use-binary-search-X_equals-one
gen must-use-binary-search 100000 100000 100000 100000 1 1

@testset must-memoize-answer-X-equals-one
gen must-memoize-answer 100000 100000 100000 100000 1 1

@testset X-Y-equals-one
gen random 100000 100000 100000 100000 1 100 1 1
gen random 100000 100000 100000 100000 999999900 1000000000 1 1

@subtask B_i-equals-i
@include smallest-case
@include must-jump-X_equals-one
gen sqrt 100000 100000 100000 100000
gen must-jump 100000 100000 100000 100000 2 1000000000

@subtask Q-less-than-five
@include samples
@include smallest-case
gen random 10000 49999 5 5 1 100 0 0
gen random 50000 99999 5 5 1 100 0 0
gen random 100000 100000 5 5 1 100 0 0

@subtask Y-equals-one
@include smallest-case
@include X-Y-equals-one
@include must-memoize-answer-X-equals-one
gen must-memoize-answer 100000 100000 100000 100000 2 1000000000
gen random 100000 100000 100000 100000 1 100 0 1

@subtask X-equals-one
@include smallest-case
@include X-Y-equals-one
@include must-jump-X_equals-one
@include must-use-binary-search-X_equals-one
@include must-memoize-answer-X-equals-one
gen random 100000 100000 100000 100000 1 100 1 0
gen random 100000 100000 100000 100000 999999900 1000000000 1 0

@subtask full
@include samples
@include smallest-case
@include B_i-equals-i
@include Q-less-than-five
@include Y-equals-one
@include X-equals-one
gen must-use-binary-search 100000 100000 100000 100000 2 1000000000
gen random 10000 49999 10000 49999 1 100 0 0
gen random 50000 99999 50000 99999 1 100 0 0
gen random 100000 100000 100000 100000 1 100 0 0
gen random 100000 100000 100000 100000 999999900 1000000000 0 0
gen random 100000 100000 100000 100000 1 1000000000 0 0
